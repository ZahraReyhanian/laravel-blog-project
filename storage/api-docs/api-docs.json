{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "reyhanyanz@gamil.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "login a user",
                "description": "login a user",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "register a user",
                "description": "register a user",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/password/email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "send email to reset password a user",
                "description": "send email to reset password a user",
                "operationId": "sendPasswordResetLinkEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendEmailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/password/reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "reset password a user",
                "description": "reset password a user",
                "operationId": "resetPasswordAUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get list of permissions",
                "description": "Returns list of permissions",
                "operationId": "getPermissionsList",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Store new permission",
                "description": "Returns permission data",
                "operationId": "storePermission",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/permissions/{id}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permission information",
                "description": "Returns permission data",
                "operationId": "getPermissionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Update existing permission",
                "description": "Returns updated permission data",
                "operationId": "updatePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "permissions and roles of a user",
                "description": "Update and store permissions and roles of a user",
                "operationId": "updateUserPermissionAndRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete existing permission",
                "description": "Deletes a record and returns no content",
                "operationId": "deletePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get list of roles",
                "description": "Returns list of roles",
                "operationId": "getRolesList",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Store new role",
                "description": "Returns role data",
                "operationId": "storeRole",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role information",
                "description": "Returns role data",
                "operationId": "getRoleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update existing role",
                "description": "Returns updated role data",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete existing role",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/permissions/{user}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get User permissions and roles",
                "description": "Return User permissions and roles",
                "operationId": "getUserPermissions",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "description": "Returns list of categories",
                "operationId": "getCategoriesList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Store new category",
                "description": "Returns category data",
                "operationId": "storeCategories",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category information",
                "description": "Returns category data",
                "operationId": "getCategoriesById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update existing category",
                "description": "Returns updated category data",
                "operationId": "updateCategories",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete existing category",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCategories",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Categories id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/comment": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get list of Comments",
                "description": "Returns list of comments",
                "operationId": "getCommentsList",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Store new comment",
                "description": "Returns comment data",
                "operationId": "storeComment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/comment/{id}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get comment information",
                "description": "Returns comment data",
                "operationId": "getCommentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Comments"
                ],
                "summary": "Update existing comment",
                "description": "Confirm a comment",
                "operationId": "confirmComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Delete existing post",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/comment/{id}/unconfirm": {
            "put": {
                "tags": [
                    "Comments"
                ],
                "summary": "Update existing comment",
                "description": "Unconfirm a comment",
                "operationId": "unconfirmComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{id}/like": {
            "post": {
                "tags": [
                    "favorites"
                ],
                "summary": "Like a post",
                "description": "Returns post data",
                "operationId": "likePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{id}/unlike": {
            "post": {
                "tags": [
                    "favorites"
                ],
                "summary": "Unlike a post",
                "description": "Returns post data",
                "operationId": "UnlikePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get list of posts",
                "description": "Returns list of posts",
                "operationId": "getPostsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Store new post",
                "description": "Returns post data",
                "operationId": "storePost",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get post information",
                "description": "Returns post data",
                "operationId": "getPostById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update existing post",
                "description": "Returns updated post data",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete existing post",
                "description": "Deletes a record and returns no content",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CategoryRequest": {
                "title": "Category request",
                "description": "Category request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new category",
                        "type": "string",
                        "example": "Tree"
                    },
                    "parent": {
                        "title": "Parent",
                        "description": "Parent of the category",
                        "type": "string",
                        "example": "0"
                    }
                },
                "type": "object"
            },
            "CommentRequest": {
                "title": "Comment request",
                "description": "Comment request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "comment": {
                        "title": "Comment",
                        "description": "Text of a comment",
                        "type": "string",
                        "example": "Awesome!"
                    },
                    "parent_id": {
                        "title": "Comment ID",
                        "description": "Comment Parent ID and it's default is 0",
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "commentable_id": {
                        "title": "Commentable ID",
                        "description": "Id of model that user comment on",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "commentable_type": {
                        "title": "Commentable Type",
                        "description": "Type of model that user comment on",
                        "type": "integer",
                        "format": "int64",
                        "example": "App\\Models\\Post"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Login request",
                "description": "Login request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "email of an existing user",
                        "type": "string",
                        "example": "zahra@gmail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "password of user",
                        "type": "string",
                        "example": "12345678"
                    }
                },
                "type": "object"
            },
            "PermissionRequest": {
                "title": "Permission request",
                "description": "Permission request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new permission",
                        "type": "string",
                        "example": "edit-post"
                    },
                    "label": {
                        "title": "Label",
                        "description": "short description of name",
                        "type": "string",
                        "format": "int64",
                        "example": "ویرایش پست"
                    }
                },
                "type": "object"
            },
            "PostRequest": {
                "title": "Post request",
                "description": "Post request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "title of the new post",
                        "type": "string",
                        "example": "A nice post"
                    },
                    "image": {
                        "title": "image",
                        "description": "image of the new post",
                        "type": "string",
                        "format": "binary",
                        "example": "https://res.cloudinary.com/demo/image/upload/q_60/sample.jpg"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new post",
                        "type": "string",
                        "example": "This is new post's description"
                    },
                    "user_id": {
                        "title": "user_id",
                        "description": "Author's id of the new post",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "categories": {
                        "title": "categories",
                        "description": "Post categories",
                        "type": "array",
                        "items": {
                            "description": "The Category ID",
                            "type": "number",
                            "example": 1
                        }
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Register request",
                "description": "Register request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "name of an user",
                        "type": "string",
                        "example": "zahra"
                    },
                    "email": {
                        "title": "email",
                        "description": "email of an user",
                        "type": "string",
                        "example": "zahra@gmail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "password of user",
                        "type": "string",
                        "example": "12345678"
                    },
                    "password_confirmation": {
                        "title": "password_confirmation",
                        "description": "confirmation of password",
                        "type": "string",
                        "example": "12345678"
                    }
                },
                "type": "object"
            },
            "ResetRequest": {
                "title": "Reset request",
                "description": "Reset request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "email of an user",
                        "type": "string",
                        "example": "zahra@gmail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "password of user",
                        "type": "string",
                        "example": "12345678"
                    },
                    "password_confirmation": {
                        "title": "password_confirmation",
                        "description": "confirmation of password",
                        "type": "string",
                        "example": "12345678"
                    },
                    "token": {
                        "title": "token",
                        "description": "token that is send to email and it has limited life time",
                        "type": "string",
                        "example": "7a246c3fdd83f204af6f80544bfeebc614aed8cfaf81e31221c33775ce05c26f"
                    }
                },
                "type": "object"
            },
            "RoleRequest": {
                "title": "Role request",
                "description": "Role request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new role",
                        "type": "string",
                        "example": "edit-post"
                    },
                    "label": {
                        "title": "Label",
                        "description": "short description of name",
                        "type": "string",
                        "format": "int64",
                        "example": "ویرایش پست"
                    },
                    "permissions": {
                        "title": "permissions",
                        "description": "list of permissions",
                        "type": "array",
                        "items": {
                            "description": "The Permission ID",
                            "type": "number",
                            "example": 1
                        }
                    }
                },
                "type": "object"
            },
            "SendEmailRequest": {
                "title": "SendEmail request",
                "description": "SendEmail request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "email of an user",
                        "type": "string",
                        "example": "zahra@gmail.com"
                    }
                },
                "type": "object"
            },
            "UserPermissionRequest": {
                "title": "UserPermission request",
                "description": "UserPermission request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "permissions": {
                        "title": "permissions",
                        "description": "list of permissions",
                        "type": "array",
                        "items": {
                            "description": "The Permission ID",
                            "type": "number",
                            "example": 1
                        }
                    },
                    "roles": {
                        "title": "roles",
                        "description": "list of roles",
                        "type": "array",
                        "items": {
                            "description": "The Role ID",
                            "type": "number",
                            "example": 1
                        }
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new category",
                        "type": "string",
                        "example": "Books"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "parent": {
                        "title": "Parent ID",
                        "description": "Id of Super Category. default is 0",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "Comment": {
                "title": "Comment",
                "description": "Comment model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "comment": {
                        "title": "Comment",
                        "description": "Text of a comment",
                        "type": "string",
                        "example": "Awesome!"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "parent_id": {
                        "title": "Comment ID",
                        "description": "Comment Parent ID and it's default is 0",
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "commentable_id": {
                        "title": "Commentable ID",
                        "description": "Id of model that user comment on",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "commentable_type": {
                        "title": "Commentable Type",
                        "description": "Type of model that user comment on",
                        "type": "integer",
                        "format": "int64",
                        "example": "App\\Models\\Post"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Comment"
                }
            },
            "Permission": {
                "title": "Permission",
                "description": "Permission model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new permission",
                        "type": "string",
                        "example": "edit-post"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "label": {
                        "title": "Label",
                        "description": "short description of name",
                        "type": "string",
                        "format": "int64",
                        "example": "ویرایش پست"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Permission"
                }
            },
            "Post": {
                "title": "Post",
                "description": "Post model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title of the new post",
                        "type": "string",
                        "example": "A nice post"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the new post",
                        "type": "string",
                        "example": "This is new post's description"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User's id of the new post",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "image": {
                        "title": "image",
                        "description": "image of the new post",
                        "type": "string",
                        "format": "binary",
                        "example": "https://res.cloudinary.com/demo/image/upload/q_60/sample.jpg"
                    },
                    "comments": {
                        "$ref": "#/components/schemas/Comment"
                    },
                    "categories": {
                        "title": "categories",
                        "description": "Post categories",
                        "type": "array",
                        "items": {
                            "description": "The Category ID",
                            "type": "number",
                            "example": 1
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Post"
                }
            },
            "Role": {
                "title": "Role",
                "description": "Role model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new role",
                        "type": "string",
                        "example": "manage-post"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "label": {
                        "title": "Label",
                        "description": "short description of name",
                        "type": "string",
                        "format": "int64",
                        "example": "مدیریت پست ها"
                    },
                    "permissions": {
                        "title": "permissions",
                        "description": "list of permissions",
                        "type": "array",
                        "items": {
                            "description": "The Permission ID",
                            "type": "number",
                            "example": 1
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Role"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Posts",
            "description": "API Endpoints of Posts"
        }
    ],
    "security": [
        []
    ]
}